AWSTemplateFormatVersion: '2010-09-09'
Description: Cognito setup for the 2mo (Mis Ma Ostsin) app.
#https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/Welcome.html


Resources:
  # Create a Cognito User Pool
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: MyCognitoUserPool
      AliasAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireUppercase: true
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true

  # Create a Cognito User Pool Client
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: MyCognitoAppClient
      UserPoolId: !Ref UserPool
      GenerateSecret: false
      ExplicitAuthFlows:
        - USER_PASSWORD_AUTH  # Login only, no sign-up
      CallbackURLs:
        - "http://localhost:3000"  # Replace with your frontend URL
      LogoutURLs:
        - "http://localhost:3000/logout"  # Replace with your frontend logout URL

  # Create a Cognito Identity Pool
  IdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      IdentityPoolName: MyCognitoIdentityPool
      AllowUnauthenticatedIdentities: false
      CognitoIdentityProviders:
        - ClientId: !Ref UserPoolClient
          ProviderName: !GetAtt UserPool.ProviderName

  # IAM Role for Authenticated Users
  AuthenticatedRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com  # Cognito Federated Identity
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud: !Ref IdentityPool  # Ensures the Identity Pool can assume the role
              StringLike:
                cognito-identity.amazonaws.com:amr: authenticated  # Ensures only authenticated users assume this role
      Policies:
        - PolicyName: AuthenticatedPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: "dynamodb:Query"
                Resource: "*"

  # IAM Role for Unauthenticated Users (Optional)
  UnauthenticatedRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com  # Cognito Federated Identity
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud: !Ref IdentityPool  # Ensures the Identity Pool can assume the role
              StringLike:
                cognito-identity.amazonaws.com:amr: unauthenticated  # Ensures only unauthenticated users assume this role
      Policies:
        - PolicyName: UnauthenticatedPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: "dynamodb:Scan"
                Resource: "*"




  # Attach IAM roles to Identity Pool
  IdentityPoolRoleAttachment:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId: !Ref IdentityPool
      Roles:
        authenticated: !GetAtt AuthenticatedRole.Arn
        unauthenticated: !GetAtt UnauthenticatedRole.Arn

Outputs:
  UserPoolId:
    Description: "Cognito User Pool ID"
    Value: !Ref UserPool
  UserPoolClientId:
    Description: "Cognito User Pool Client ID"
    Value: !Ref UserPoolClient
  IdentityPoolId:
    Description: "Cognito Identity Pool ID"
    Value: !Ref IdentityPool